{"version":3,"sources":["logo.svg","Player.js","App.js","reportWebVitals.js","index.js"],"names":["Player","divId","width","height","video","useRef","useState","newUrl","setNewUrl","newWidth","setNewWidth","newHeight","setNewHeight","newVolume","setNewVolume","id","ref","autoplay","src","type","Button","variant","onClick","current","play","pause","alert","muted","Math","floor","volume","duration","ended","paused","url","TextField","style","placeholder","helperText","value","onChange","e","target","resize","size","inputProps","inputMode","pattern","fullscreen","document","getElementById","checked","requestFullscreen","setFullscreen","Checkbox","setAutoplay","mute","setMute","App","className","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e0b2a978.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/*\n    Toan Phan - toanphan@berkeley.edu\n*/\n\nimport React, { useState } from 'react'; \nimport { Fragment, useRef} from 'react';\nimport './Player.css'\nimport Button from '@mui/material/Button';\nimport { Checkbox, TextField} from '@mui/material';\n\nfunction Player ({divId, width, height}) {\n\n    // hooks\n    const video = useRef(null);\n    const [newUrl, setNewUrl] = useState(\"\");\n    const [newWidth, setNewWidth] = useState(\"\");\n    const [newHeight, setNewHeight] = useState(\"\");\n    const [newVolume, setNewVolume] = useState(\"\");\n\n    // Methods \n    const load = (url) => {\n        video.current.src = url;\n    }\n\n    const play = () => {\n        video.current.play();\n    }\n\n    const pause = () => {\n        video.current.pause();\n    }\n\n    const resize = (width, height) => {\n        video.current.height = height;\n        video.current.width = width;\n    }\n\n    // Getters \n    const getHeight = () => {\n        return video.current.height;\n    }\n\n    const getWidth = () => {\n        return video.current.width;\n    }\n\n    const getVolume = () => {\n        return Math.floor(video.current.volume * 100);\n    }\n\n    const getMute = () => {\n        return video.current.muted;\n    }\n\n    // return an integer = length of video in seconds.\n    const getDuration = () => {\n        return Math.floor(video.current.duration);\n    }\n\n    const getPlaybackState = () => {\n        if (video.current.ended) {\n            return \"ended\";\n        } else if (video.current.paused) {\n            return \"paused\";\n        } else {\n            return \"playing\";\n        }\n    }\n\n    // Setters \n    const setAutoplay = (autoplay) => {\n        video.current.autoplay = autoplay;\n    }\n\n    const setVolume = (volume) => {\n        video.current.volume = volume / 100;\n    }\n\n    const setMute = (mute) => {\n        video.current.muted = mute;\n    }\n\n    const setFullscreen = (fullscreen) => {\n        if (fullscreen) {\n            video.current.requestFullscreen();\n        }\n    }\n\n    // render \n    return (\n        <Fragment>\n            <br></br>\n            <br></br>\n            <div id={divId}>\n                <video ref={video} id=\"video\" height={height} width={width} autoplay={false}>\n                    <source src=\"https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4\" type=\"video/mp4\" />\n                    Not supported browser.\n                </video>\n            </div>\n            <br></br>\n\n            <div id=\"api\">\n            <h2>API Functions</h2>\n            <Button variant=\"outlined\" onClick={() => play()}>Play</Button>\n\n            <Button variant=\"outlined\" onClick={() => pause()}>Pause</Button>\n\n            <Button variant=\"outlined\" \n                    onClick={() => alert(`Height: ${getHeight()}px`)}>Get Height</Button>\n\n            <Button variant=\"outlined\" \n                    onClick={() => alert(`Width: ${getWidth()}px`)}>Get Width</Button>\n\n            <Button variant=\"outlined\" \n                    onClick={() => alert(`Mute: ${getMute()}`)}>Get Mute</Button>\n\n            <Button variant=\"outlined\" \n                    onClick={() => alert(`Volume: ${getVolume()}%`)}>Get Volume</Button>\n\n            <Button variant=\"outlined\" \n                    onClick={() => alert(`Video duration: ${getDuration()} seconds`)}>Get Duration</Button>\n\n            <Button variant=\"outlined\" \n                    onClick={() => alert(`Playback state: ${getPlaybackState()}`)}>Get PlaybackState</Button>\n\n            <br></br>\n            <br></br>\n\n            <Button variant=\"outlined\" id=\"load\" type=\"submit\" onClick={() => {\n                load(newUrl);\n                alert(`done loading new URL: ${newUrl}`)\n                setNewUrl(\"\");\n            }}>Load URL</Button>\n\n            <TextField\n                style = {{width: 500}}\n                variant=\"outlined\"\n                type=\"text\"\n                placeholder=\"enter a new video URL\"\n                helperText=\"URL\"\n                value={newUrl} \n                onChange={(e) => setNewUrl(e.target.value)}/>\n\n            <br></br>\n            <br></br>\n\n            <Button \n                variant=\"outlined\" \n                id=\"resize\" \n                type=\"submit\" \n                onClick={() => {\n                resize(newWidth, newHeight);\n                alert(`new (width X height) = ${newWidth}px X ${newHeight}px`)\n                setNewWidth(\"\");\n                setNewHeight(\"\");\n            }}>Resize</Button>\n\n            <TextField \n                size=\"small\"\n                variant=\"outlined\"\n                type=\"number\"\n                helperText=\"Width (px)\"\n                inputProps={{ inputMode: 'numeric', pattern: '[0-9]*'}}\n                value={newWidth}\n                placeholder=\"Enter a new width\"\n                onChange={(e) => setNewWidth(e.target.value)}/>\n\n            <TextField \n                size=\"small\"\n                placeholder=\"Enter a new height\"\n                variant=\"outlined\"\n                type=\"number\" \n                helperText=\"Height (px)\"\n                inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\n                value={newHeight}\n                onChange={(e) => setNewHeight(e.target.value)}/>\n\n            <br></br>\n            <br></br>\n\n            <Button variant=\"outlined\" id=\"resize\" type=\"submit\" onClick={() => {\n                setVolume(newVolume);\n                alert(`new volume set at ${newVolume}%`)\n                setNewVolume(\"\");\n            }}>Set Volume</Button>\n\n            <TextField \n                size=\"small\"\n                variant=\"outlined\"\n                type=\"number\" \n                value={newVolume}\n                placeholder=\"Enter a new volume\"\n                inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\n                helperText=\"Volume (0 - 100)\"\n                onChange={(e) => setNewVolume(e.target.value)}/>\n          \n            <br></br>\n            <br></br>\n\n            <Button variant=\"outlined\" onClick={() => {\n                let fullscreen = document.getElementById(\"fsBox\").checked;\n                alert(`fullscreen mode is ${fullscreen}`)\n                setFullscreen(fullscreen)\n            }}>Set Fullscreen (true if checked)</Button>\n            <Checkbox \n                id=\"fsBox\"\n                type=\"checkbox\"/>\n            \n            <br></br>\n            <br></br>\n            \n            <Button variant=\"outlined\" onClick={() => {\n                let autoplay = document.getElementById(\"autoplayBox\").checked;\n                alert(`autoplay mode is ${autoplay}. Load a new video url to test autoplay.`)\n                setAutoplay(autoplay)\n            }}>Set Autoplay (true if checked)</Button>\n            <Checkbox \n                id=\"autoplayBox\"\n                type=\"checkbox\"/>\n         \n            <br></br>\n            <br></br>\n\n            <Button variant=\"outlined\" onClick={() => {\n                let mute = document.getElementById(\"muteBox\").checked;\n                alert(`mute is set to ${mute}`)\n                setMute(mute);\n                }}>Set Mute (true if checked)</Button>\n            <Checkbox\n                id=\"muteBox\"\n                type=\"checkbox\"/>\n          \n            <br></br>\n            <br></br>\n          \n            </div>\n        </Fragment>\n    );\n}\n\nexport default Player;","import logo from './logo.svg';\nimport './App.css';\nimport Player from './Player'\n\nfunction App() {\n\n  // Test data\n  let props = {\n    divId: \"videoContainer\",\n    width: \"900\", \n    height: \"650\"\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Video Player UI built with React.js <img src={logo} className=\"App-logo\" alt=\"logo\" /></h2>\n      </header>\n\n      <body className=\"App-body\">\n        \n        <div id=\"videoContainer\">\n          <Player {...props}></Player>\n        </div>\n\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}